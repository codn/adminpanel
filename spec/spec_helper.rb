# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration

ENV['RAILS_ENV'] ||= 'test'
require File.expand_path('../dummy/config/environment', __FILE__)
require 'rspec/rails'
require 'capybara/rspec'
require 'factory_girl_rails'
require 'carrierwave/orm/activerecord'
require 'carrierwave/test/matchers'
require 'active_record'
require 'rake'

Dir["./spec/support/**/*.rb"].sort.each { |f| require f }


class ActiveRecord::Base
  mattr_accessor :shared_connection
  @@shared_connection = nil

  def self.connection
    @@shared_connection || retrieve_connection
  end
end
# Forces all threads to share the same connection. This works on
# Capybara because it starts the web server in a thread.

Capybara.register_driver :webkit do |app|
  Capybara::Driver::Webkit.new(app, :ignore_ssl_errors => true)
end

Capybara.javascript_driver = :webkit

# don't run on the local machine (since we don't have xvfb running locally)
if Rails.env.production?
    headless = Headless.new
    headless.start
end

RSpec.configure do |config|
	config.treat_symbols_as_metadata_keys_with_true_values = true
	config.run_all_when_everything_filtered = true
	config.filter_run :focus

	ActiveRecord::Base.establish_connection(
	  :adapter => 'sqlite3',
	  :database => ':memory:'
	)

	puts "creating sqlite in memory database"
	load "#{Rails.root}/db/schema.rb"

	ActiveRecord::Base.shared_connection = ActiveRecord::Base.connection

	# config.include ActionDispatch::TestProcess

	config.use_transactional_fixtures = false

	config.include Rails.application.routes.url_helpers

	config.order = 'random'
end
