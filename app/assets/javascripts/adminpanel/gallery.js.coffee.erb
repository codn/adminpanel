window.Dropzone.autoDiscover = false

DropzoneHandler =
  model: null
  csrf: null
  form: null
  dropzoneContainer: null
  resourceId: null
  resourceClass: null

  init: ->
    @csrf = $('meta[name="csrf-token"]').attr('content')
    _this = @
    $('form[data-dropzone]').each((i,e)->
      _this.form = $(e)
      _this.resourceClass = _this.form.data('resource-class')
      _this.resourceId = _this.form.data('resource-id')

      fields = _this.form.data('dropzone-galleries')
      for field, className of fields
        _this.model = className
        _this.field = field
        _this.dropzoneContainer = $("##{field}_dropzone")

        if _this.dropzoneContainer.length
          maxfiles = $("##{_this.field}_dropzone").data('max-files')
          maxfiles = null if (typeof maxfiles == 'undefined' || maxfiles == '')

          dropzone = new Dropzone(
            "##{_this.field}_dropzone",
            {
              url: _this.form.data('dropzone-url'),
              previewsContainer: "##{_this.field}_dropzone",
              clickable: "##{_this.field}_dropzone a.btn",
              headers: { 'X-CSRF-Token':  _this.csrf },
              addRemoveLinks: true,
              dictCancelUpload: "<%= I18n.t('dropzone.cancel_upload') %>",
              dictCancelUploadConfirmation: "<%= I18n.t('dropzone.cancel_upload_confirmation') %>"
              dictRemoveFile: "<%= I18n.t('dropzone.remove_file') %>"
              dictMaxFilesExceeded: "<%= I18n.t('dropzone.max_files_reached') %>"
              maxFiles: maxfiles
            }
          )

          dropzone.on('success', $.proxy(_this.onSuccessUpload, _this))
          dropzone.on('sending', $.proxy(_this.addModelToData, _this))
          dropzone.on('removedfile', $.proxy(_this.deleteFile, _this))

          _this.dropzoneContainer.find("input[type='hidden']").each((a, b)->
            input = $(b)
            mockFile = { name: input.data('file-name'), size: input.data('file-size') }
            dropzone.emit('addedfile', mockFile)
            dropzone.emit('thumbnail', mockFile, input.data('file-url'))
            dropzone.emit('complete', mockFile)
            _this.dropzoneContainer.find('.dz-image').last().data('id', input.val())
          )
    )

  onSuccessUpload: (file, serverResponse) ->
    $(file.previewElement).find('.dz-image').data('id', serverResponse['id'])
    @dropzoneContainer.append($('<input/>').attr('type', 'hidden').attr('name', "#{@form.data('dropzone')}[#{@field}_ids][]").val(serverResponse['id']))

  addModelToData: (file, xhr, formData) ->
    formData.append('model', @model)
    formData.append('resource_class', @resourceClass)
    unless typeof @resourceId == 'undefined'
      formData.append('resource_id', @resourceId)

  deleteFile: (file) ->
    imageToDelete = $(file.previewElement).find('.dz-image').data('id')
    $.ajax(
      url: @form.data('dropzone-delete-url'),
      dataType: 'json',
      data:
        model: @model,
        id: imageToDelete
      type: 'DELETE'
    )

    $("input[type='hidden'][value='#{imageToDelete}'][name='#{@form.data('dropzone')}[#{@field}_ids][]']").remove()



$(document).on('page:load ready', $.proxy(DropzoneHandler.init, DropzoneHandler))
