<% @model.form_attributes.each do |entries| %>
<% entries.each do |attribute, properties| %>

	<% if properties["type"] == "wysiwyg_field" %>
		<% type = properties["type"] %>
		<% args = properties.except("type") %>
		<%= f.hidden_field attribute, :id => "#{attribute}-field", :value => resource.send(attribute) %>
		<%= f.send(type, attribute, args) %>
		<%= content_for :scripts do %>
			<script type="text/javascript">
			<%= render "shared/init_editor", :field_var => attribute, :label => properties[:label] %>
			</script>
		<% end %>

	<% elsif properties["type"] == "adminpanel_file_field" %>
		<%= f.fields_for :images do |builder| %>
    	<%= render 'shared/image_fields', :f => builder, :model_name => @model.display_name.capitalize %>
  	<% end -%>
  	<%= link_to_add_fields t("Add Image"), f, :images, @model.display_name.capitalize %>

  <% elsif properties["type"] == "belongs_to" %>
		<% args = properties.except("type", "name", "model") %>
		<% args.symbolize_keys! %>
  	<%= f.select(attribute, (@collections["#{properties["model"]}"].collect{|resource| [resource.name, resource.id]}), args) %>

  <% elsif properties["type"] == "has_many" %>
		<%#= f.checkbox(collection, relationship) %>
		<div class="control-group">
			<div class="control-label">
				<%= I18n.t('other.choose', :model => pluralize_es(properties["model"].classify.constantize.display_name)) %>
			</div>
	  	<%= hidden_field_tag("#{class_name_downcase(f.object)}[#{relationship_ids(properties["model"])}][]", nil) %>
			<div class="controls">
		  	<% @collections["#{properties["model"]}"].each do |resource| %>
		  		<%= f.checkbox(resource, class_name_downcase(f.object) ,relationship_ids(properties["model"])) %>
				<% end %>
			</div>
		</div>

  <% else %>
		<% type = properties["type"] %>
		<% args = properties.except("type", "name") %>
    <%= f.send(type, attribute, args) %>
  <% end %>

<% end %>
<% end %>
